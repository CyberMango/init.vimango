###############################################################
# Table of contents:
# => File structure snippets.
###############################################################

###############################################################
# => Global definitions.
###############################################################
global !p
header_title = "/*** Headers **************************************************************************************/"
const_title = "/*** Constants ************************************************************************************/"
functions_title = "/*** Functions ************************************************************************************/"
endglobal

###############################################################
# => File structure snippets.
###############################################################
snippet hw "Create a simple cpp program."
#include <iostream>

int main()
{
	std::cout << "Hello, World!" << std::endl;
	$0
	return 0;
}

endsnippet

snippet cfile "Structure of a module's cpp file."
`!p snip.rv = header_title`
#include "`!p snip.rv = snip.basename`.h"

`!p snip.rv = const_title`

`!p snip.rv = functions_title`
$0

endsnippet

snippet hfile "Structure of a module's h file."
`!p upper_name = snip.basename.upper()`
#ifndef `!p snip.rv = upper_name`_H
#define `!p snip.rv = upper_name`_H

`!p snip.rv = header_title`

`!p snip.rv = const_title`

`!p snip.rv = functions_title`
$0

#endif // `!p snip.rv = uppername`_H
endsnippet

snippet class "Basic class structure."
class ${1:`!p snip.rv = snip.basename`}
{
public:
	$1();
	~$1();
	$0

private:

}
endsnippet
